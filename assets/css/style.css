/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0;
}

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block;
}

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px;
}

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
     * Add the correct display in IE.
     */
main {
  display: block;
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit;
}

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder;
}

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic;
}

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000;
}

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%;
}

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block;
}

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none;
}

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible;
}

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible;
}

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */
}

[type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */
}

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto;
}

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block;
}

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item;
}

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block;
}

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block;
}

/**
     * Add the correct display in IE.
     */
template {
  display: none;
}

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none;
}

/* ul */
/* xl */
/* lg */
/* md */
/* sm */
/* xs */
/* xx */
* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.pctr {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  opacity: 0.3;
  z-index: 2;
}

html {
  font-size: 16px;
  font-family: "Roboto", sans-serif;
  letter-spacing: 0.1em;
  overflow-y: scroll;
  color: #ffffff;
}

a {
  text-decoration: none;
  color: #ffffff;
}

ul {
  margin: 0;
  padding: 0;
}

li {
  margin: 0;
  padding: 0;
}

.header {
  background-image: url(../../assets/img/img-header.png);
  background-size: cover;
  background-position: center center;
  min-height: 100vh;
  position: relative;
}

.header_menu {
  max-width: 1296px;
  margin: 35px auto 0px;
  padding-left: 10px;
  padding-right: 10px;
}

.layer {
  background-color: rgba(45, 54, 81, 0.8);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.menu_logo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.menu_logo-logo {
  text-transform: uppercase;
  font-size: 1.5rem;
  letter-spacing: 0.25rem;
  z-index: 2;
}

.menu_logo-border {
  border: 3px solid #d53d27;
  padding-top: 10px;
  padding-left: 7px;
  padding-bottom: 16px;
}

.menu_logo_list {
  list-style: none;
  margin-top: 5px;
  font-size: 1.2rem;
  letter-spacing: 0.05rem;
}

.menu_logo_item {
  display: inline;
  margin-left: 37px;
}

.menu_logo-link:hover {
  color: #d66926;
}

.header_content {
  margin: 390px auto 0px;
}

.header_content-title {
  text-align: center;
  font-size: 3.58rem;
  font-family: "Roboto Slab", serif;
  font-weight: 300;
  letter-spacing: 0.38rem;
  margin-bottom: 55px;
}

.header_content-buttons {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.header-btn {
  background-color: rgba(255, 255, 255, 0.1);
  border: 2px solid #ffffff;
  display: block;
  min-width: 250px;
  min-height: 60px;
  text-align: center;
  font-size: 1.15rem;
  padding-top: 18px;
  -webkit-transition: background-color 0.5s;
  -o-transition: background-color 0.5s;
  transition: background-color 0.5s;
}

.header-btn:hover,
.btn-accent:hover {
  background-color: #d66926;
}

.header-btn:nth-of-type(1) {
  margin-right: 20px;
}

.menu_hamburger {
  display: none;
  width: 30px;
  height: 22.5px;
  position: relative;
  margin: 0px 10px 0px 10px;
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: 0.5s ease-in-out;
  -o-transition: 0.5s ease-in-out;
  transition: 0.5s ease-in-out;
  cursor: pointer;
}

.menu_hamburger span {
  display: block;
  position: absolute;
  height: 3px;
  width: 100%;
  background: #ffffff;
  border-radius: 3px;
  opacity: 1;
  left: 0;
  -webkit-transform: rotate(0deg);
      -ms-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: 0.25s ease-in-out;
  -o-transition: 0.25s ease-in-out;
  transition: 0.25s ease-in-out;
}

/* Icon 3 */
.menu_hamburger span:nth-child(1) {
  top: 0px;
}

.menu_hamburger span:nth-child(2),
.menu_hamburger span:nth-child(3) {
  top: 9px;
}

.menu_hamburger span:nth-child(4) {
  top: 18px;
}

.menu_hamburger.active span:nth-child(1) {
  top: 9px;
  width: 0%;
  left: 50%;
}

.menu_hamburger.active span:nth-child(2) {
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg);
}

.menu_hamburger.active span:nth-child(3) {
  -webkit-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

.menu_hamburger.active span:nth-child(4) {
  top: 9px;
  width: 0%;
  left: 50%;
}

.services {
  padding: 10px 10px 40px 8px;
}

.services_container {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-areas: "a1 a1 a2 a3" "a4 a5 a5 a6" "a7 a8 a9 a6";
  grid-gap: 10px;
}

.services_item {
  position: relative;
  min-height: calc(33.33vh - 10px);
  overflow: hidden;
}

.services_item-layer {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1;
  background-color: #2d3651;
  opacity: 0.8;
  -webkit-transition: opacity 0.5s;
  -o-transition: opacity 0.5s;
  transition: opacity 0.5s;
}

.services_item-image {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-position: 50% 50%;
  background-size: cover;
  -webkit-transition: -webkit-transform 0.5s;
  transition: -webkit-transform 0.5s;
  -o-transition: transform 0.5s;
  transition: transform 0.5s;
  transition: transform 0.5s, -webkit-transform 0.5s;
}

.services_item-title {
  z-index: 2;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0;
  text-align: center;
}

.services_item-title a {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  height: 100%;
}

.services_item:hover .services_item-image {
  -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
          transform: scale(1.1);
}

.services_item:nth-of-type(1) {
  grid-area: a1;
}

.services_item:nth-of-type(2) {
  grid-area: a2;
}

.services_item:nth-of-type(3) {
  grid-area: a3;
}

.services_item:nth-of-type(4) {
  grid-area: a4;
}

.services_item:nth-of-type(5) {
  grid-area: a5;
}

.services_item:nth-of-type(6) {
  grid-area: a6;
}

.services_item:nth-of-type(7) {
  grid-area: a7;
}

.services_item:nth-of-type(8) {
  grid-area: a8;
}

.services_item:nth-of-type(9) {
  grid-area: a9;
}

.services_button {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin-top: 20px;
}

.btn-accent {
  display: block;
  text-align: center;
  font-size: 1.22rem;
  letter-spacing: 0.1em;
  -webkit-transition: background-color 0.5s;
  -o-transition: background-color 0.5s;
  transition: background-color 0.5s;
  min-width: 350px;
  background-color: rgba(45, 54, 81, 0.8);
  border: 2px solid #2d3651;
  padding-top: 18px;
  padding-bottom: 16px;
}

.about {
  background-color: #e5e5e5;
}

.container {
  width: 100%;
  max-width: 1330px;
  margin: 0 auto;
  padding: 0 10px;
}

.about_wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  min-height: 652px;
}

.about_text {
  width: 936px;
  height: 320px;
  margin-top: 100px;
}

.about_text-top {
  font-family: "Roboto Slab", serif;
  font-size: 40px;
  font-weight: 900;
  letter-spacing: 3px;
  color: #2d3651;
  line-height: 50px;
}

.about_text-bottom {
  color: #637588;
  margin-top: 20px;
  letter-spacing: 1.8px;
  line-height: 20px;
}

.about_text-bottom p {
  padding-top: 28px;
  margin: 0;
}

.about_separator {
  background-color: rgba(112, 112, 112, 0.27);
  width: 1px;
  height: 200px;
  -ms-flex-item-align: center;
      align-self: center;
}

.about_image {
  background-image: url(../img/img-lamp-webdev.png);
  min-width: 271px;
  min-height: 488px;
  background-position: center;
  background-repeat: no-repeat;
  margin-top: 35px;
  margin-right: 10px;
}

.form {
  min-height: 120px;
  background-color: #2d3651;
}

.form_wrapper {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-areas: "f1 f2 f3";
  grid-gap: 20px;
  min-height: 120px;
}

.form_box {
  min-height: 60px;
  -ms-flex-item-align: center;
      align-self: center;
  background-color: rgba(255, 255, 255, 0.05);
  color: #ffffff;
  font-family: "Roboto", sans-serif;
  font-size: 18px;
  border: none;
  border-bottom: 2px solid rgba(255, 255, 255, 0.1);
  padding: 18px 0px 18px 30px;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

.form_name {
  grid-area: f1;
}

.form_email {
  grid-area: f2;
}

.form_btn {
  grid-area: f3;
}

.form_box::-webkit-input-placeholder {
  color: rgba(255, 255, 255, 0.51);
  font-family: "Roboto", sans-serif;
  font-size: 18px;
}

.form_box::-moz-placeholder {
  color: rgba(255, 255, 255, 0.51);
  font-family: "Roboto", sans-serif;
  font-size: 18px;
}

.form_box:-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.51);
  font-family: "Roboto", sans-serif;
  font-size: 18px;
}

.form_box::-ms-input-placeholder {
  color: rgba(255, 255, 255, 0.51);
  font-family: "Roboto", sans-serif;
  font-size: 18px;
}

.form_box::placeholder {
  color: rgba(255, 255, 255, 0.51);
  font-family: "Roboto", sans-serif;
  font-size: 18px;
}

.form_name:hover,
.form_name:focus,
.form_email:hover,
.form_email:focus {
  background-color: rgba(255, 255, 255, 0.1);
  outline: none;
  border-bottom-color: rgba(255, 255, 255, 0.25);
}

.form_btn {
  padding: 18px 0px;
  border-top: 2px solid transparent;
  border-left: 2px solid transparent;
  border-right: 2px solid transparent;
}

.form_btn:hover {
  background-color: #d66926;
  outline: none;
  border: 2px solid #ffffff;
  cursor: pointer;
}

.posts_title {
  font-family: "Roboto Slab", serif;
  font-size: 40px;
  font-weight: 700;
  letter-spacing: 3px;
  color: #2d3651;
  margin-top: 105px;
  margin-bottom: 55px;
}

.posts_wrapper {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-areas: " p1 p1 p2 p3 " " p4 p5 p6 p6 ";
  grid-gap: 20px;
}

.posts_inner:nth-of-type(1) {
  grid-area: p1;
}

.posts_inner:nth-of-type(2) {
  grid-area: p2;
}

.posts_inner:nth-of-type(3) {
  grid-area: p3;
}

.posts_inner:nth-of-type(4) {
  grid-area: p4;
}

.posts_inner:nth-of-type(5) {
  grid-area: p5;
}

.posts_inner:nth-of-type(6) {
  grid-area: p6;
}

.posts_inner {
  min-height: calc(50vh - 10px);
  overflow: hidden;
}

.posts_inner-block {
  min-height: 300px;
  overflow: hidden;
}

.posts_inner-image {
  min-height: 300px;
  background-position: center;
  background-size: cover;
  position: relative;
  -webkit-transition: all 0.4s;
  -o-transition: all 0.4s;
  transition: all 0.4s;
}

.posts_inner-link:hover {
  cursor: pointer;
}

.posts_inner-text {
  min-height: 250px;
  background-color: #eeeeee;
  color: #637588;
  text-align: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
}

.posts_inner:hover .posts_inner-image {
  -webkit-transform: scale(1.1);
      -ms-transform: scale(1.1);
          transform: scale(1.1);
}

.post_inner-link {
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
}

.inner-text--title {
  margin: 0;
  font-family: "Roboto Slab", serif;
  font-size: 18px;
  font-weight: 700;
  padding-left: 15px;
  padding-right: 15px;
}

.inner-text--text {
  font-size: 16px;
  padding-left: 15px;
  padding-right: 15px;
}

.posts-button {
  width: 350px;
  height: 60px;
  background-color: rgba(45, 54, 81, 0.8);
  margin: 20px auto;
  border: 2px solid #2d3651;
  text-align: center;
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

.posts-button:hover {
  background-color: #d66926;
  cursor: pointer;
}

.posts-btn {
  display: block;
  font-size: 18px;
  letter-spacing: 2px;
  font-weight: 400;
  padding-top: 20px;
  padding-bottom: 20px;
}

.footer {
  margin-top: 100px;
  background-color: #2d3651;
}

.footer_icons-wrapper {
  margin: 0 auto;
  width: 240px;
  padding-top: 50px;
  padding-left: 5px;
  padding-right: 10px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

.footer_icon {
  -webkit-transition: all 0.5s;
  -o-transition: all 0.5s;
  transition: all 0.5s;
}

.footer_icon:hover {
  color: #d66926;
  cursor: pointer;
}

.footer_underline {
  width: 75px;
  height: 2px;
  background-color: rgba(255, 255, 255, 0.1);
  margin: 26px auto 0;
}

.footer_text {
  margin: 26px auto 0;
  width: 170px;
  text-align: center;
}

.footer_text-top {
  color: #637588;
  text-align: center;
  padding-top: 8px;
  font-size: 18px;
  letter-spacing: 3px;
}

.footer_text-bottom {
  color: #ffffff;
  font-weight: 700;
  letter-spacing: 1px;
  padding-bottom: 65px;
  font-size: 18px;
}

@media (max-width: 1920px) {
  .layer-menu {
    display: none;
  }
}

@media (max-width: 1130px) {
  .header_content-title {
    font-size: 3rem;
  }
}

@media (max-width: 992px) {
  .header_content-title {
    font-size: 2.5rem;
    letter-spacing: 0.2rem;
  }
  .header-btn {
    min-width: 200px;
    min-height: 50px;
    font-size: 1rem;
    padding-top: 14px;
  }
  .services_container {
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-areas: "a1 a1 a2" "a3 a4 a4" "a5 a5 a6" "a7 a8 a6" "a7 a9 a9";
  }
  .about_text-bottom p:nth-of-type(4) {
    display: none;
  }
  .posts_wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-areas: " p1 p1 p2 " " p3 p4 p4 " " p5 p5 p6 ";
    grid-gap: 20px;
  }
}

@media (max-width: 794px) {
  .about_text-bottom p:nth-of-type(3),
  p:nth-of-type(4) {
    display: none;
  }
}

@media (max-width: 768px) {
  .menu_hamburger {
    display: block;
    z-index: 3;
  }
  .menu_logo_list {
    display: none;
  }
  .menu_logo_list.active {
    display: block;
    max-width: 150px;
    position: absolute;
    top: 1%;
    right: 5%;
  }
  .layer-menu {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 92px;
    z-index: 0;
    background-color: rgba(68, 89, 110, 0.25);
  }
  .header_content {
    margin: 370px auto 0px;
  }
  .header_content-title {
    font-size: 1.875rem;
    letter-spacing: 0.15rem;
    margin-bottom: 30px;
  }
  .header-btn {
    min-width: 170px;
    min-height: 40px;
    font-size: 1rem;
    padding-top: 9px;
  }
  .services_container {
    grid-template-columns: 1fr 1fr;
    grid-template-areas: "a1 a2" "a3 a2" "a4 a4" "a5 a6" "a5 a7" "a8 a9";
  }
  .form_wrapper {
    grid-template-columns: 1fr 1fr;
    grid-template-areas: "f1 f1" "f2 f3";
    min-height: 180px;
    -webkit-box-align: center !important;
        -ms-flex-align: center !important;
            align-items: center !important;
    padding-top: 18px;
    padding-bottom: 18px;
  }
  .about_text-bottom {
    overflow: hidden;
  }
  .posts_wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-areas: " p1 p2 " " p3 p4 " " p5 p6 ";
    grid-gap: 20px;
  }
}

@media (max-width: 670px) {
  .about_text-top {
    font-size: 38px;
    letter-spacing: 1px;
  }
}

@media (max-width: 625px) {
  .about_text-top {
    font-size: 34px;
  }
  .about_text {
    margin-top: 70px;
  }
}

@media (max-width: 576px) {
  .header_content {
    max-width: 330px;
    margin: 360px auto 0px;
  }
  .services_container {
    grid-template-columns: 1fr;
    grid-template-areas: "a1" "a2" "a3" "a4" "a5" "a6" "a7" "a8" "a9";
  }
  .btn-accent {
    width: 100%;
  }
  .container {
    max-width: 576px;
  }
  .form_wrapper {
    grid-template-columns: 1fr;
    grid-template-areas: "f1" "f2" "f3";
    min-height: 262px;
  }
  .about_wrapper {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    max-height: 1052px;
  }
  .about_separator {
    display: none;
  }
  .about_text {
    margin-top: 50px;
    width: 100%;
    height: 410px;
    overflow: hidden;
  }
  .about_text-top {
    text-align: center;
    font-size: 24px;
    line-height: 32px;
  }
  .about_text-bottom {
    margin-top: 0px;
    max-height: 305px;
    overflow: hidden;
    max-width: 100%;
  }
  .about_text-bottom p:nth-of-type(3) {
    display: block;
  }
  .about_image {
    margin: 0 auto 65px;
  }
  .services {
    padding: 10px 10px 20px 8px;
  }
  .form_wrapper {
    padding-top: 14px;
    padding-bottom: 14px;
  }
  .posts_wrapper {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-areas: "p1" "p2" "p3" "p4" "p5" "p6";
    grid-gap: 20px;
  }
  .posts-button {
    width: 100%;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
